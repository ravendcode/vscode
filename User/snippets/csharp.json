{
	// Place your snippets for csharp here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Print in debug log": {
		"prefix": "log",
		"body": [
			"Debug.Log($1);"
		]
	},
	"Debug.Log()": {
		"prefix": "p",
		"body": [
			"Debug.Log($1);"
		]
	},
	"return": {
		"prefix": "r",
		"body": [
			"return"
		]
	},
	"void Start()": {
		"prefix": "start",
		"body": [
			"void Start()",
			"{\n\t$1\n}"
		]
	},
	"void Update()": {
		"prefix": "update",
		"body": [
			"void Update()",
			"{\n\t$1\n}"
		]
	},
	"void FixedUpdate()": {
		"prefix": "fupdate",
		"body": [
			"void FixedUpdate()",
			"{\n\t$1\n}"
		]
	},
	"void OnTriggerEnter2D(Collider2D other)": {
		"prefix": "ontriggerenter2d",
		"body": [
			"void OnTriggerEnter2D(Collider2D other)",
			"{\n\t$1\n}"
		]
	},
	"void OnTriggerEnter(Collider other)": {
		"prefix": "ontriggerenter",
		"body": [
			"void OnTriggerEnter(Collider other)",
			"{\n\t$1\n}"
		]
	},
	"void OnTriggerExit2D(Collider2D other)": {
		"prefix": "ontriggerexit2d",
		"body": [
			"void OnTriggerExit2D(Collider2D other)",
			"{\n\t$1\n}"
		]
	},
	"void OnTriggerExit(Collider other)": {
		"prefix": "ontriggerexit",
		"body": [
			"void OnTriggerExit(Collider other)",
			"{\n\t$1\n}"
		]
	},
	"public void method()": {
		"prefix": "pubf",
		"body": [
			"public ${1:void} $2($3)\n{\n\t$4\n}"
		]
	},
	"protected void method()": {
		"prefix": "prof",
		"body": [
			"protected ${1:void} $2($3)\n{\n\t$4\n}"
		]
	},
	"private void method()": {
		"prefix": "prif",
		"body": [
			"private ${1:void} $2($3)\n{\n\t$4\n}"
		]
	},
	"Init MonoBehaviour": {
		"prefix": "mono",
		"body": [
			"using System.Collections;",
			"using System.Collections.Generic;",
			"using UnityEngine;\n",
			"public class ${TM_FILENAME_BASE} : MonoBehaviour\n{",
			"\tvoid Start()\n\t{\n\t\n\t}\n",
			"\tvoid Update()\n\t{\n\t\n\t}",
			"}"
		]
	},
	"public": {
		"prefix": "pub",
		"body": [
			"public "
		]
	},
	"protected": {
		"prefix": "pro",
		"body": [
			"protected "
		]
	},
	"private": {
		"prefix": "pri",
		"body": [
			"private "
		]
	}
}
